# This docker-compose file will spin up an ACS cluster on a local host or on a server and it requires a minimum of 13GB Memory to distribute among containers.
#
# For performance tuning, assign the container memory and give a percentage of it to the JVM.
# Use either the -Xms,-Xmx flags or the newly added flags in java 10+: -XX:MaxRAMPercentage and -XX:MinRAMPercentage. More details here: https://www.oracle.com/technetwork/java/javase/10-relnote-issues-4108729.html

# Note: The docker-compose file from github.com is a limited trial that goes into read-only mode after 2 days.
# Get the latest docker-compose.yml file with a 30-day trial license by accessing the Alfresco Content Services trial download page at:
# https://www.alfresco.com/platform/content-services-ecm/trial/download

# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

#                -Ddsync.service.uris=http://ec2-54-224-31-118.compute-1.amazonaws.com:9090/alfresco

services:
    alfresco:
        image: acs:7.0.1
        build: ./acs
        volumes:
            - alfdata-volume:/usr/local/tomcat/alf_data
        mem_limit: 2700m
        environment:
            JAVA_TOOL_OPTIONS: "
                -Dencryption.keystore.type=JCEKS
                -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
                -Dencryption.keyAlgorithm=DESede
                -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
                -Dmetadata-keystore.password=mp6yc0UD9e
                -Dmetadata-keystore.aliases=metadata
                -Dmetadata-keystore.metadata.password=oKIWzVdEdA
                -Dmetadata-keystore.metadata.algorithm=DESede
                "
            JAVA_OPTS: "
                -Ddb.driver=org.postgresql.Driver
                -Ddb.username=alfresco
                -Ddb.password=alfresco
                -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
                -Dsolr.host=solr6
                -Dsolr.port=8983
                -Dsolr.secureComms=none
                -Dsolr.base.url=/solr
                -Dindex.subsystem.name=solr6
                -Dshare.host=ec2-54-224-31-118.compute-1.amazonaws.com
                -Dshare.port=8080
                -Dalfresco.host=ec2-54-224-31-118.compute-1.amazonaws.com
                -Dalfresco.port=8080
                -Daos.baseUrlOverwrite=http://ec2-54-224-31-118.compute-1.amazonaws.com:8080/alfresco/aos
                -Dmessaging.broker.url=\"failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true\"
                -Ddeployment.method=DOCKER_COMPOSE
                -Dtransform.service.enabled=true
                -Dtransform.service.url=http://transform-router:8095
                -Dsfs.url=http://shared-file-store:8099/
                -DlocalTransform.core-aio.url=http://transform-core-aio:8090/
                -DlocalTransform.transform-outlook.url=http://transform-outlook:8090/
                -Dcsrf.filter.enabled=false
                -Dsolr.backup.alfresco.numberToKeep=0
                -Dsolr.backup.archive.numberToKeep=0
                -Dmetrics.enabled=true
                -Dmetrics.dbMetricsReporter.enabled=true
                -Dmetrics.dbMetricsReporter.query.enabled=true
                -Dmetrics.dbMetricsReporter.query.statements.enabled=true
                -Dmetrics.jvmMetricsReporter.enabled=true
                -Dmetrics.restMetricsReporter.enabled=true
                -Dmetrics.restMetricsReporter.path.enabled=true
                -XX:MaxRAMPercentage=80
                "

    transform-outlook:
        image: quay.io/alfresco/transform-outlook:1.0.0
        mem_limit: 2g
        environment:
          JAVA_OPTS: " -Xms256m -Xmx512m"
          ACTIVEMQ_URL: "nio://activemq:61616"
          ACTIVEMQ_USER: "admin"
          ACTIVEMQ_PASSWORD: "admin"
          FILE_STORE_URL: "http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file"
        ports:
          - 8091:8090
        links:
          - activemq

    transform-router:
        mem_limit: 512m
        image: quay.io/alfresco/alfresco-transform-router:1.4.1-A3
        environment:
          JAVA_OPTS: " -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80"
          ACTIVEMQ_URL: "nio://activemq:61616"

          CORE_AIO_URL : "http://transform-core-aio:8090"

          FILE_STORE_URL: "http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file"
        ports:
            - 8095:8095
        links:
          - activemq

    transform-core-aio:
        image: alfresco/alfresco-transform-core-aio:2.5.3
        mem_limit: 1536m
        environment:
            JAVA_OPTS: " -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80"
            ACTIVEMQ_URL: "nio://activemq:61616"
            FILE_STORE_URL: "http://shared-file-store:8099/alfresco/api/-default-/private/sfs/versions/1/file"
        ports:
            - 8090:8090
        links:
        - activemq

    shared-file-store:
        image: quay.io/alfresco/alfresco-shared-file-store:0.15.0
        mem_limit: 512m
        environment:
            JAVA_OPTS: " -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80"
            scheduler.content.age.millis: 86400000
            scheduler.cleanup.interval: 86400000
        ports:
            - 8099:8099
        volumes:
            - shared-file-store-volume:/tmp/Alfresco/sfs

    share:
        image: share:7.0.1
        build: ./share
        mem_limit: 1g
        environment:
            REPO_HOST: "alfresco"
            REPO_PORT: "8080"
            JAVA_OPTS: "
                -XX:MinRAMPercentage=50
                -XX:MaxRAMPercentage=80
                -Dalfresco.host=alfresco
                -Dalfresco.port=8080
                -Dalfresco.context=alfresco
                -Dalfresco.protocol=http
                "

    postgres:
        image: postgres:13.1
        mem_limit: 512m
        environment:
            - POSTGRES_PASSWORD=alfresco
            - POSTGRES_USER=alfresco
            - POSTGRES_DB=alfresco
        command: postgres -c max_connections=300 -c log_min_messages=LOG
        ports:
            - 5432:5432
        volumes:
            - db-data:/var/lib/postgresql/data

    solr6:
        mem_limit: 4g
        image: quay.io/alfresco/insight-engine:2.0.2
        environment:
            #Solr needs to know how to register itself with Alfresco
            - SOLR_ALFRESCO_HOST=alfresco
            - SOLR_ALFRESCO_PORT=8080
            #Alfresco needs to know how to call solr
            - SOLR_SOLR_HOST=solr6
            - SOLR_SOLR_PORT=8983
            #Create the default alfresco and archive cores
            - SOLR_CREATE_ALFRESCO_DEFAULTS=alfresco,archive
            #HTTP by default
            - ALFRESCO_SECURE_COMMS=none
            - "SOLR_JAVA_MEM=-Xms3g -Xmx3g"
        ports:
            - 8083:8983 #Browser port
        volumes:
            - ass-data:/opt/alfresco-insight-engine/solrhome
            - ass-data:/opt/alfresco-insight-engine/data
            - ass-data:/opt/alfresco-insight-engine/contentstore
           # - ass-data:/opt/alfresco-search-services/contentstore
           # - ass-data:/opt/alfresco-search-services/data

    zeppelin:
        image: quay.io/alfresco/insight-zeppelin:2.0.2
        environment:
            REPO_HOST: "alfresco"
            REPO_PORT: "8080"
            REPO_PROTOCOL: "http"
        ports:
            - 9090:9090

    activemq:
        image: alfresco/alfresco-activemq:5.16.1
        mem_limit: 1g
        ports:
            - 8161:8161 # Web Console
            - 5672:5672 # AMQP
            - 61616:61616 # OpenWire
            - 61613:61613 # STOMP

    digital-workspace:
        image: quay.io/alfresco/alfresco-digital-workspace:2.3.0-adw
        mem_limit: 128m
        environment:
            APP_CONFIG_AUTH_TYPE: "BASIC"
            BASE_PATH: ./

    proxy:
        image: alfresco/alfresco-acs-nginx:3.1.1
        mem_limit: 128m
        environment:
            DISABLE_SYNCSERVICE: "false"
        depends_on:
            - alfresco
            - digital-workspace
        ports:
            - 8080:8080
        links:
            - digital-workspace
            - alfresco
            - share
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf

   # sync-service:
   #     image: quay.io/alfresco/service-sync:3.4.0
   #     mem_limit: 1g
   #     environment:
   #         JAVA_OPTS : "
   #         -Dsql.db.driver=org.postgresql.Driver
   #         -Dsql.db.url=jdbc:postgresql://postgres:5432/alfresco
   #         -Dsql.db.username=alfresco
   #         -Dsql.db.password=alfresco
   #         -Dmessaging.broker.host=activemq
   #         -Drepo.hostname=alfresco
   #         -Drepo.port=8080
   #         -Ddw.server.applicationConnectors[0].type=http
   #         -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
   #         "
   #     ports:
   #         - 9090:9090

    prometheus:
        image: prom/prometheus:latest
        ports:
            - 9091:9090
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus_data:/prometheus
        command:
            - '--storage.tsdb.path=/prometheus'
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--web.enable-admin-api'
            - '--web.enable-lifecycle'

    grafana:
        image: grafana/grafana:latest
        ports:
            - "3000:3000"
        volumes:
            - grafana_lib:/var/lib/grafana
            - ./datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=secret


    process:
        image: alfresco/process-services:2.0.0
        environment:
            HIBERNATE_DIALECT: "org.hibernate.dialect.PostgreSQLDialect"
            DATASOURCE_DRIVER: "org.postgresql.Driver"
            DATASOURCE_URL: "jdbc:postgresql://postgres:5432/activiti"
            DATASOURCE_USERNAME: "alfresco"
            VALIDATOR_EDITOR_BPMN_DISABLE_SCRIPTTASK: "false"
            VALIDATOR_EDITOR_BPMN_DISABLE_SCRIPTTASK_GROOVY: "false"
            CONTENTSTORAGE_FS_ROOTFOLDER: /usr/local/data/
        volumes:
            - activiti-data:/usr/local/data
            - ./activiti.lic:/usr/local/tomcat/lib/activiti.lic

    process-admin:
        image: alfresco/process-services-admin:2.0.0
        mem_limit: 1g
        environment:
            HIBERNATE_DIALECT: "org.hibernate.dialect.PostgreSQLDialect"
            DATASOURCE_DRIVER: "org.postgresql.Driver"
            DATASOURCE_URL: "jdbc:postgresql://postgres:5432/activiti-admin"
            DATASOURCE_USERNAME: "alfresco"
            REST_APP_HOST: "http://process"
            ACTIVITI_ADMIN_REST_APP_PORT: "8080"
            ACTIVITI_ADMIN_REST_APP_USERNAME: "admin@app.activiti.com"
            ACTIVITI_ADMIN_REST_APP_PASSWORD: "admin"
            JAVA_OPTS: "
                -Xms500m
                -Xmx500m "

volumes:
    shared-file-store-volume:
        driver_opts:
            type: tmpfs
            device: tmpfs
    alfdata-volume:
    db-data:
    ass-data:
    grafana_lib:
    prometheus_data:
    activiti-data:

